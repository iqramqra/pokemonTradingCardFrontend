{"ast":null,"code":"var _jsxFileName = \"/Users/iqra/Development/mod5project/pokemonTradingCardFrontend/src/App.js\";\nimport React from 'react'; // import {Switch, Route, withRouter} from 'react-router-dom'\n\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './components/NavBar';\nimport Home from './components/Home';\nimport LoginForm from './components/Login/Form';\nimport RegisterForm from './components/Login/Register';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        username: '',\n        bio: '',\n        avatar: ''\n      },\n      token: '',\n      pokemons: []\n    };\n\n    this.handleResponse = response => {\n      if (response.user) {\n        localStorage.token = response.token;\n        this.setState(response, () => {\n          this.props.history.push(\"/home\");\n        });\n      } else {\n        alert(response.error);\n      }\n    };\n\n    this.handleRegister = userInfo => {\n      fetch(\"http://localhost:3000/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.handleLogin = userInfo => {\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(userInfo)\n      }).then(r => r.json()).then(this.handleResponse);\n    };\n\n    this.renderRegisterForm = () => {\n      return /*#__PURE__*/React.createElement(RegisterForm, {\n        handleSubmit: this.handleRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 12\n        }\n      });\n    };\n\n    this.renderLoginForm = () => {\n      return /*#__PURE__*/React.createElement(LoginForm, {\n        handleSubmit: this.handleLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 12\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      fetch('http://localhost:3000/persist', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n      }).then(r => r.json()).then(this.handleResponse);\n    }\n\n    fetch('http://localhost:3000/pokemons').then(r => r.json()).then(pokemonArray => console.log(pokemonArray));\n  }\n\n  render() {\n    console.log(this.state.pokemons);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: LoginForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      component: RegisterForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/iqra/Development/mod5project/pokemonTradingCardFrontend/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Nav","Home","LoginForm","RegisterForm","App","Component","state","user","username","bio","avatar","token","pokemons","handleResponse","response","localStorage","setState","props","history","push","alert","error","handleRegister","userInfo","fetch","method","headers","body","JSON","stringify","then","r","json","handleLogin","renderRegisterForm","renderLoginForm","componentDidMount","pokemonArray","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react'\n// import {Switch, Route, withRouter} from 'react-router-dom'\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Nav from './components/NavBar'\nimport Home from './components/Home'\nimport LoginForm from './components/Login/Form'\nimport RegisterForm from './components/Login/Register'\n\nclass App extends React.Component {\n\n  state = {\n    user: {\n      username: '',\n      bio: '',\n      avatar: ''\n    },\n    token: '',\n    pokemons: []\n  }\n\n  componentDidMount(){\n    if(localStorage.token){\n      fetch('http://localhost:3000/persist',{\n        headers: {\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n      })\n      .then(r => r.json())\n      .then(this.handleResponse)\n    }\n    fetch('http://localhost:3000/pokemons')\n    .then(r => r.json())\n    .then(pokemonArray => console.log(pokemonArray)\n    )\n  }\n\n  handleResponse = (response) => {\n    if (response.user) {\n      localStorage.token = response.token\n      this.setState(response, () => {\n        this.props.history.push(\"/home\")\n      })\n    } else {\n      alert(response.error)\n    }\n  }\n\n  handleRegister = (userInfo) => {\n    fetch(\"http://localhost:3000/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n    .then(r => r.json())\n    .then(this.handleResponse)\n  }\n\n  handleLogin = (userInfo) => {\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    })\n    .then(r => r.json())\n    .then(this.handleResponse)\n  }\n\n  // Create a new Register Form\n  renderRegisterForm = () => {\n    return <RegisterForm handleSubmit={this.handleRegister}/>\n  }\n  // WILL RENDER OUT THE LOGIN PAGE\n  renderLoginForm = () => {\n    return <LoginForm handleSubmit={this.handleLogin}/>\n  }\n\n\n  render() {\n    console.log(this.state.pokemons);\n    return (\n      <div className=\"App\">\n      {/* Nav Bar should go here */}\n           <Switch>\n            {/* <Nav/> NAV BAR WILL GO IN THE HOME COMPONENT */}\n            <Route path='/' exact component={LoginForm}/>\n            <Route path='/register' component={RegisterForm}/>\n            <Route path='/home' component={Home}/>\n            </Switch>\n        </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}